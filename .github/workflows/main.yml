name: Build push AWS ECR and deploy to AWS EKS
on:
  push:
    branches: [ "main" ]

jobs:

  build-push:
    name: Build and Deploy to AWS ECR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Remplazando url_api en config.ts
        uses: datamonsters/replace-action@v2
        with:
          files: 'frontend/src/config/config.ts'
          replacements: 'URL_API=${{ secrets.URL_API }}'
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: limoneno-frontend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build --file Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          echo "Replace image in deployment"
          imagen=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          sed -i "s|IMAGE_ECR|${imagen}|" eks/limoneno-frontend-deployment.yml
          cat eks/limoneno-frontend-deployment.yml      
      - name: Install and configure kubectl
        run: |
          VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
          curl https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl \
          --progress-bar \
          --location \
          --remote-name
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          aws eks --region ${{ secrets.REGION }} update-kubeconfig --name Limoneno 
      - name: Deploy eks
        run: |
          cd eks
          list_deployments=$(kubectl get deployment)
          if [[ "$list_deployments" == *"limoneno-frontend"* ]]; then
            kubectl delete deployment limoneno-frontend
            kubectl delete services limoneno-frontend
            kubectl apply -f .            
          else
            kubectl apply -f .
          fi
